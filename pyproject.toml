# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "spacy-cleaner"
version = "3.1.2"
description = "Easily clean text with spaCy!"
readme = "README.md"
authors = ["spacy-cleaner <hallcellan@gmail.com>"]
license = "MIT"
repository = "https://github.com/Ce11an/spacy-cleaner"
homepage = "https://github.com/Ce11an/spacy-cleaner"

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
spacy = "~=3.4.1"
tqdm = "~=4.64.0"
spacy-lookups-data = "~=1.0.3"

[tool.poetry.dev-dependencies]
bandit = "~=1.7.1"
black = "~=22.10.0"
darglint = "~=1.8.1"
isort = {extras = ["colors"], version = "~=5.10.1"}
mypy = "~=0.982"
mypy-extensions = "~=0.4.3"
pre-commit = "~=2.20.0"
pydocstyle = "~=6.1.1"
pylint = "~=2.15.5"
pyupgrade = "~=3.2.0"
pytest-cov = "~=4.0.0"
mkdocs-material = "^8.5.7"
mkdocstrings = {extras = ["python"], version = "^0.19.0"}

[tool.black]
# https://github.com/psf/black
target-version = ["py38"]
line-length = 80
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 38
line_length = 80
known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
python_version = 3.8
pretty = true
show_traceback = true
color_output = true
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = true
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = false
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
branch = true
source = ["spacy-cleaner"]
omit = ["*__init__*"]

[tool.coverage.report]
fail_under = 90
show_missing = true
exclude_lines = [
  "if __name__ == .__main__.:",
  "pragma: no cover",
]

[tool.pydocstyle]
convention = "google"
add-ignore = "D301,D212,D107"
match = '(?!__init__).*\.py'
match-dir='(?!(tests)).*'
